<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="passboard">

	<select resultMap="boardMap" id="selectPassBoardList">
		select * from passBoard order by passBoardNo desc</select>
	<resultMap id="boardMap" type="map"> </resultMap>
	
	<select id="selectPassBoardTotalContents" resultType="_int">
		select count(*) from passboard
	</select>
	
	<select id="selectPassBoardOne" resultType="passboard">
		select * from passBoard where passBoardNo = #{passBoardNo} 
	</select>

	<insert id="insertPassBoard" parameterType="passboard" >
		insert into passBoard(passBoardno, passBoardTitle, passBoardWriter, passBoardContent)values(seq_passboardno.nextval,#{passBoardTitle},#{passBoardWriter},#{passBoardContent}) 
	</insert>
	
	<select id="passSearchList" resultMap="boardSearchMap">
		select * from passBoard 
	<include refid="search"/>
		order by passBoardNo desc
	</select>
	<resultMap id="boardSearchMap" type="map"></resultMap>

	<select id="countPassList" resultType="_int">
		select count(*) from passBoard
	<include refid="search"/>
	</select>
	
	<sql id="search">
		<choose>
			<when test="searchOption == 'all'">
				where passBoardWriter like '%'||#{keyword}||'%'
				or passBoardTitle like '%'||#{keyword}||'%'
			</when>
			<otherwise>
			where ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
	
	<delete id="passBoardDelete" parameterType="_int">
		delete from passBoard where passBoardNo = #{passBoardNo}
	</delete>

	<update id="passBoardReadCount" parameterType="_int">
		update passBoard set passBoardReadCount = passBoardReadCount+1 where passBoardNo = #{passBoardNo}
	</update>

    <update id="passBoardUpdate">
        update passBoard set passBoardTitle = #{passBoardTitle}, passBoardWriter = #{passBoardWriter}, passBoardContent = #{passBoardContent} , passBoardDate = sysdate
        where passBoardNo = #{passBoardNo}
    </update>

	<insert id="passBoardAddComment" parameterType="com.spring.ithrer.board.model.vo.PassBoardComment">
		<!-- insert into pbComment (pbCommentNo, pbCommentContent, passBoardNo)values(seq_pbCommentNo.nextval,#{pbCommentContent},#{passBoardNo}) -->
		insert into passBoardComment (pbCommentNo, pbCommentLevel, pbCommentWriter, pbCommentContent, pbBoardRef, pbCommentRef, pbCommentDate) 
								values(seq_pbCommentNo.nextval, #{pbCommentLevel} , #{pbCommentWriter}, #{pbCommentContent}, #{pbBoardRef}, #{pbCommentRef}, default)
	</insert>
	<select id="passBoardCommentList" resultType="com.spring.ithrer.board.model.vo.PassBoardComment" parameterType="com.spring.ithrer.board.model.vo.PassBoardComment" >
<!-- 	<select id="passBoardCommentList" resultMap="passboardmap" parameterType="list"> -->
		<!-- select * from passBoardComment order by pbCommentNo -->
		select * from passBoardComment where pbBoardRef= #{pbBoardRef} start with pbCommentLevel = 1 connect by prior pbCommentNo = pbCommentRef order siblings by pbCommentNo
	</select>
 		<!-- <resultMap id="passBoardCommentList" type="passboardmap"> </resultMap> -->
</mapper>
